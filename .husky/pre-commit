#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "🚀 Running pre-commit checks..."

# Run type checking
echo "📝 Type checking..."
bun run type-check
if [ $? -ne 0 ]; then
  echo "❌ Type checking failed!"
  exit 1
fi

# Run ESLint
echo "🔍 Linting..."
bun run lint:check
if [ $? -ne 0 ]; then
  echo "❌ Linting failed!"
  exit 1
fi

# Run Prettier
echo "🎨 Checking formatting..."
bun run format:check
if [ $? -ne 0 ]; then
  echo "❌ Code formatting check failed! Run 'bun run format' to fix."
  exit 1
fi

# Run tests with coverage
echo "🧪 Running tests with coverage..."
bun run test:coverage
if [ $? -ne 0 ]; then
  echo "❌ Tests failed!"
  exit 1
fi

# Check coverage threshold (80%)
echo "📊 Checking coverage threshold..."
COVERAGE_FILE="coverage/coverage-summary.json"
if [ -f "$COVERAGE_FILE" ]; then
  COVERAGE=$(node -p "Math.min(
    JSON.parse(require('fs').readFileSync('$COVERAGE_FILE')).total.lines.pct,
    JSON.parse(require('fs').readFileSync('$COVERAGE_FILE')).total.functions.pct,
    JSON.parse(require('fs').readFileSync('$COVERAGE_FILE')).total.branches.pct,
    JSON.parse(require('fs').readFileSync('$COVERAGE_FILE')).total.statements.pct
  )")
  
  if [ "$(echo "$COVERAGE < 80" | bc -l 2>/dev/null || echo "$COVERAGE" | awk '{print ($1 < 80)}')" = "1" ]; then
    echo "❌ Coverage is below 80%: $COVERAGE%"
    echo "Please add more tests to reach the required coverage threshold."
    exit 1
  else
    echo "✅ Coverage is above 80%: $COVERAGE%"
  fi
fi

echo "✅ All pre-commit checks passed!"